package com.aptoide.androidclient;

import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;
import android.support.v4.app.NavUtils;
import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.os.Build;

public class LoginActivity extends Activity {

	private User user;
	private String device_serial;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		// Show the Up button in the action bar.
		setupActionBar();

		// Checkboxes listeners
		CheckBox show_password = (CheckBox) findViewById(R.id.show_password);
		show_password.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub

			}
		});

		CheckBox associate_device = (CheckBox) findViewById(R.id.associate_device);
		associate_device.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub

			}
		});
	}

	/**
	 * Set up the {@link android.app.ActionBar}, if the API is available.
	 */
	@TargetApi(Build.VERSION_CODES.HONEYCOMB)
	private void setupActionBar() {
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
			getActionBar().setDisplayHomeAsUpEnabled(true);
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.login, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			// This ID represents the Home or Up button. In the case of this
			// activity, the Up button is shown. Use NavUtils to allow users
			// to navigate up one level in the application structure. For
			// more details, see the Navigation pattern on Android Design:
			//
			// http://developer.android.com/design/patterns/navigation.html#up-vs-back
			//
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	public void userAuthenticate(View view) {

		// create a user object with inserted email and password
		createUser();

		// --------------------- FAZER CONEXAO Ã€ BASE DE DADOS DEPOIS
		// -----------------------------------

		// // check if this user exists in Postgres database
		// JDBCPostgresConnection db_conn = new JDBCPostgresConnection();
		//
		// // if login had success, complete user's usertoken from response
		// // user.setUsertoken(usertoken);
		//
		//
		// // close db connection
		// db_conn.closeConnection();

		// if "associate device with account" is checked, associate device with
		// user account
		if (((CheckBox) findViewById(R.id.associate_device)).isChecked()) {
			associateDeviceWithAccount();
		}

		Toast.makeText(
				this,
				"authentication send: " + user.getEmail() + " , "
						+ user.getPassword(), Toast.LENGTH_SHORT).show();
	}

	private void createUser() {

		EditText email = (EditText) findViewById(R.id.email_edit);
		EditText password = (EditText) findViewById(R.id.password_edit);

		String email_text = email.getText().toString();
		String password_text = password.getText().toString();

		if (email_text != null && password_text != null) {
			if (email_text.contains("@")) {
				user = new User(email_text, password_text);
			}
		}
	}

	private void associateDeviceWithAccount() {

		// Send a register request to registry web service

		// After OK response from web service, start the service to push
		// messages
	}

}
