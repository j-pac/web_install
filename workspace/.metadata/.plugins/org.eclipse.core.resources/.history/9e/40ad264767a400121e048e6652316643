import java.util.Arrays;

public class Exp {

	public static void main(String[] args) {

		int[] trama = { 0, 0, 0, 0, 0, 0, 0 };

		for (int i = 0; (int)Math.pow(2, i)  < trama.length; i++) {
			
				int exp = (int) Math.pow(2, i);
				trama[exp-1] = calcularBit(exp, trama);
			
		}


		System.out.println(Arrays.toString(trama));
	}

	public static int XOR(int bit1, int bit2) {
		int r = ((bit1 + bit2) == 1 ? 1 : 0);
		return r;
	}

	
//	public static void calcularBitParidade(int posicao, int[] trama) {
//		switch(posicao) {
//		case 1 :
//			trama[posicao-1] = XOR(XOR(trama[2], trama[4]), trama[6]);
//			
//		case 2 :
//			trama[posicao-1] = XOR(XOR(trama[2], trama[5]), trama[6]);
//			
//		case 4 : 
//			trama[posicao-1] = XOR(XOR(trama[4], trama[5]), trama[6]);	
//		}
//	}
	
	
	// Calcula bitparidade sendo dada a sua posicao
	public static int calcularBit(int mod2, int[] trama) {
		int resultado = 0;

		int j = 0;
		for (int i = mod2; i <= trama.length; i = j + mod2) {
			for (j = i; j < i + mod2; j++) {
				if (j != mod2) {
					resultado = XOR(resultado, trama[j - 1]);
				}

			}

		}
		return resultado;
	}
	
	

}
