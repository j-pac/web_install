package cm.aptoide.pt;

import cm.aptoide.pt.services.AsynchronousWebInstallService;
import cm.aptoide.pt.services.WebInstallService;
import cm.aptoide.pt.webservices.login.Login;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.preference.PreferenceManager;
import android.util.Log;
import android.widget.Toast;

public class WebInstallReceiver extends BroadcastReceiver {

	private static final String TAG = "WebInstallReceiver";
	private static final String SPREFERENCES_NAME = "WEB_INSTALL_RECEIVER";
	private static final int MODE_PRIVATE = 0;
	private static final String SPREF_SYNC_KEY = "isSyncRunningTime";

	private Context context;

	@Override
	public void onReceive(Context context, Intent intent) {
		this.context = context;
		String action = intent.getAction();
		SharedPreferences spref = context.getSharedPreferences(
				SPREFERENCES_NAME, MODE_PRIVATE);

		boolean isNetworkConnected = checkNetworkConnection(context);

		ConnectivityManager conMgr = (ConnectivityManager) context
				.getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo activeNetwork = conMgr.getActiveNetworkInfo();

		if (action.equals("android.intent.action.BOOT_COMPLETED")) {
			if (Login.isDeviceRegistered(context) && isNetworkConnected) {
				startAsynchronousService();
			}
		} else if (action.equals("cm.aptoide.pt.SYNC_START")) {
			Toast.makeText(context, "SYNC_START CALLED!!!", Toast.LENGTH_SHORT)
					.show();
			// stops the async service if running
			stopAsynchronousService();
			if (isNetworkConnected) {
				startSynchronousService();
			}
			spref.edit().putBoolean(SPREF_SYNC_KEY, true).commit();
		} else if (action.equals("cm.aptoide.pt.SYNC_STOP")) {
			Toast.makeText(context, "SYNC_STOP CALLED!!!", Toast.LENGTH_SHORT)
					.show();
			if (WebInstallService.isRunning()) {
				stopSynchronousService();
			}
			spref.edit().putBoolean(SPREF_SYNC_KEY, false).commit();
			if (Login.isDeviceRegistered(context) && isNetworkConnected) {
				startAsynchronousService();
			}
		} else if (action.equals("android.net.wifi.STATE_CHANGE")) {
			if (!spref.contains(SPREF_SYNC_KEY)) {
				System.out.println("NAO TEM A PREFERENCIA!!!");
			}

			if (isNetworkConnected) {
				Log.i(TAG, "Wireless connection detected");

				if (Login.isDeviceRegistered(context)) {
					if (spref.getBoolean(SPREF_SYNC_KEY, false)) {
						startSynchronousService();
					} else {
						startAsynchronousService();
					}
				}
			}
		}
	}

	private void startSynchronousService() {
		Intent i = new Intent(context, WebInstallService.class);
		context.startService(i);
	}

	private void stopSynchronousService() {
		Intent i = new Intent(context, WebInstallService.class);
		context.stopService(i);
	}

	private void startAsynchronousService() {
		Intent i = new Intent(context, AsynchronousWebInstallService.class);
		context.startService(i);
	}

	private void stopAsynchronousService() {
		AsynchronousWebInstallService.turnOffAlarmManager();
	}

	private boolean checkNetworkConnection(Context context) {
		ConnectivityManager connMgr = (ConnectivityManager) context
				.getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo wifi = connMgr
				.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
		return wifi.getState() == NetworkInfo.State.CONNECTED;
	}
}
